#!/bin/bash

[ -z "${MAIN_DIR}" ] && export MAIN_DIR="$(realpath -s $(dirname ${0})/../..)"


export PACKAGE="elmerfem"

# Uncomment if necessary:
#export SFX="-3"

#export NEW_VER=7.0.svn.6034+dfsg
#export NEW_VER=6.1.0.svn.5396.dfsg2
#export NEW_VER=5.5.0.svn.4499.dfsg2

export A_TYPE="xz"


# experimental unstable
export MAIN_DIST="experimental"


# Launch common script for setting variables
source "${MAIN_DIR}/Debian/setting_variables"


# Get old version
GetOldVersion
export OLD_COMMIT=$(echo ${OLD_VER} | sed -e "s/^.*.svn.\([0-9]\+\).dfsg.*$/\1/")


# Get new version
if GetNewVersion "${@}"; then
    DEVELOPER=ElmerCSC
    PROJECT=elmerfem
    VER_LIST=$(curl "https://github.com/${DEVELOPER}/${PROJECT}/tags" 2>&1 | sed -ne "s:^.*\"/${DEVELOPER}/${PROJECT}/archive/release-\(.*\).tar.gz\" .*:\1:p")
    NEW_VER=$(echo "${VER_LIST}" | sort -r -V | head -n1)
fi
export NEW_VER_FULL=${NEW_VER}${SFX}


echo "https://github.com/${DEVELOPER}/${PROJECT}/tags"
echo ;
# Display versions
DisplayVersionsUnstable


# Print versions
PrintVersions "${@}"


# Check versions
CheckVersionsUnstable


# Get sources
GetSources


export UPDATE_STRING="New upstream revision."

# temporary
#export DIR_NAME="elmerfem-${LAST_COMMIT}"
#export OLD_DIR_NAME="elmerfem-${OLD_COMMIT}"


export CLEAN_BUILD="true"

# Launch common script for updating of packages
source "${MAIN_DIR}/Debian/updating_packages"

