#!/bin/bash

[ -z "${MAIN_DIR}" ] && export MAIN_DIR="$(realpath -s $(dirname ${0})/../..)"


export PACKAGE="eiskaltdcpp-unstable"

# Uncomment if necessary:
#export SFX="-0ppa6"

# Available branches: master, 2.2.x
#export BRANCH=2.2.x
export BRANCH=master


# Launch common script for setting variables
source "${MAIN_DIR}/Launchpad/setting_variables"


# Get old version
GetOldVersion
export OLD_COMMIT=$(echo ${OLD_VER} | sed -e "s/^.*-[0-9]\{6,6\}-\(.*\)$/\1/")


# Find new version
GIT_REPO_DIR="${HOME}/WorkDir/Devel/EiskaltDC++/eiskaltdcpp_orig"
if [ -d "${GIT_REPO_DIR}" ]; then
    cd "${GIT_REPO_DIR}" || exit 1
    git checkout ${BRANCH} || exit 1
    git pull --all || exit 1
fi
export LAST_COMMIT=$(git show -s --pretty=format:%h)
if [ -z "${NEW_VER}" ]; then
    export CUR_VER=$(cat "${GIT_REPO_DIR}/CMakeLists.txt" | sed -ne "s/^set (VERSION \"\(.*\+\)\")$/\1/p")
    export DATE=$(date "+%Y%m%d-%H%M%S")
    export NEW_VER="${CUR_VER}-${DATE}-${LAST_COMMIT}"
fi
export NEW_VER_FULL=${NEW_VER}${SFX}${UBUNTU_SFX}
cd "${TEMP_DIR}" || exit 1


# Display versions
DisplayVersionsUnstable


# Print versions
PrintVersionsUnstable "${@}"


# Check versions
CheckVersionsUnstable


# Get the sources
if [ ! -e "${PACKAGE}_${NEW_VER}.orig.tar.xz" ]; then
    rm -rf  "${PACKAGE}-${NEW_VER}"
    # sources
    mkdir "${PACKAGE}-${NEW_VER}" || exit 1
    rsync -a "${GIT_REPO_DIR}/" "${PACKAGE}-${NEW_VER}/" --exclude=".git*" || exit 1
    # tarball
    tar -cJf "${PACKAGE}_${NEW_VER}.orig.tar.xz" "${PACKAGE}-${NEW_VER}"
fi


export UPDATE_STRING="New Git snapshot."

export A_TYPE="xz"
export D_ARGS="xJf"

# Launch common script for updating packages and uploading them to Launchpad
source "${MAIN_DIR}/Launchpad/updating_packages"

